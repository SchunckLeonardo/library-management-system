// Code generated by mockery v2.52.1. DO NOT EDIT.

package mocks

import (
	entity "github.com/SchunckLeonardo/library-management-system/internal/domain/entity"
	mock "github.com/stretchr/testify/mock"

	value_objects "github.com/SchunckLeonardo/library-management-system/pkg/value-objects"
)

// PatronInterface is an autogenerated mock type for the PatronInterface type
type PatronInterface struct {
	mock.Mock
}

// BorrowBook provides a mock function with given fields: book
func (_m *PatronInterface) BorrowBook(book entity.Book) error {
	ret := _m.Called(book)

	if len(ret) == 0 {
		panic("no return value specified for BorrowBook")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(entity.Book) error); ok {
		r0 = rf(book)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// ChangeEmail provides a mock function with given fields: newEmail
func (_m *PatronInterface) ChangeEmail(newEmail string) error {
	ret := _m.Called(newEmail)

	if len(ret) == 0 {
		panic("no return value specified for ChangeEmail")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(string) error); ok {
		r0 = rf(newEmail)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// ChangeName provides a mock function with given fields: newName
func (_m *PatronInterface) ChangeName(newName string) error {
	ret := _m.Called(newName)

	if len(ret) == 0 {
		panic("no return value specified for ChangeName")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(string) error); ok {
		r0 = rf(newName)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// DecreaseViolations provides a mock function with no fields
func (_m *PatronInterface) DecreaseViolations() error {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for DecreaseViolations")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func() error); ok {
		r0 = rf()
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// GetBooks provides a mock function with no fields
func (_m *PatronInterface) GetBooks() []entity.Book {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for GetBooks")
	}

	var r0 []entity.Book
	if rf, ok := ret.Get(0).(func() []entity.Book); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]entity.Book)
		}
	}

	return r0
}

// GetEmail provides a mock function with no fields
func (_m *PatronInterface) GetEmail() string {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for GetEmail")
	}

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// GetHashPassword provides a mock function with no fields
func (_m *PatronInterface) GetHashPassword() value_objects.HashPassword {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for GetHashPassword")
	}

	var r0 value_objects.HashPassword
	if rf, ok := ret.Get(0).(func() value_objects.HashPassword); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(value_objects.HashPassword)
	}

	return r0
}

// GetID provides a mock function with no fields
func (_m *PatronInterface) GetID() value_objects.ID {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for GetID")
	}

	var r0 value_objects.ID
	if rf, ok := ret.Get(0).(func() value_objects.ID); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(value_objects.ID)
	}

	return r0
}

// GetName provides a mock function with no fields
func (_m *PatronInterface) GetName() string {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for GetName")
	}

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// GetViolations provides a mock function with no fields
func (_m *PatronInterface) GetViolations() int {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for GetViolations")
	}

	var r0 int
	if rf, ok := ret.Get(0).(func() int); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(int)
	}

	return r0
}

// IncreaseViolations provides a mock function with no fields
func (_m *PatronInterface) IncreaseViolations() error {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for IncreaseViolations")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func() error); ok {
		r0 = rf()
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// ReturnBook provides a mock function with given fields: book
func (_m *PatronInterface) ReturnBook(book entity.Book) error {
	ret := _m.Called(book)

	if len(ret) == 0 {
		panic("no return value specified for ReturnBook")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(entity.Book) error); ok {
		r0 = rf(book)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewPatronInterface creates a new instance of PatronInterface. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewPatronInterface(t interface {
	mock.TestingT
	Cleanup(func())
}) *PatronInterface {
	mock := &PatronInterface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
